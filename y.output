State 43 conflicts: 1 shift/reduce
State 52 conflicts: 3 shift/reduce
State 73 conflicts: 9 shift/reduce
State 95 conflicts: 3 shift/reduce
State 120 conflicts: 3 shift/reduce
State 121 conflicts: 3 shift/reduce
State 160 conflicts: 3 shift/reduce
State 161 conflicts: 3 shift/reduce
State 162 conflicts: 3 shift/reduce
State 163 conflicts: 3 shift/reduce
State 164 conflicts: 3 shift/reduce
State 165 conflicts: 3 shift/reduce
State 166 conflicts: 3 shift/reduce
State 167 conflicts: 3 shift/reduce
State 168 conflicts: 3 shift/reduce
State 169 conflicts: 3 shift/reduce
State 170 conflicts: 3 shift/reduce
State 171 conflicts: 3 shift/reduce
State 172 conflicts: 3 shift/reduce
State 209 conflicts: 1 shift/reduce
State 210 conflicts: 5 shift/reduce
State 222 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decs

    2 decs: funcAndVar
    3     | jsLoad
    4     | classDec
    5     | templateDec
    6     | jsExport
    7     | templateDec decs
    8     | classDec decs
    9     | jsLoad decs
   10     | funcAndVar decs
   11     | jsExport decs

   12 funcAndVar: declare
   13           | funcDec

   14 exp: INT
   15    | STRING
   16    | REAL
   17    | NUL
   18    | CHAR
   19    | TRUEE
   20    | FALSEE
   21    | exp PLUS exp
   22    | exp MINUS exp
   23    | exp TIMES exp
   24    | exp DIVIDE exp
   25    | exp MOD exp
   26    | MINUS exp
   27    | exp EQ exp
   28    | exp NEQ exp
   29    | exp GE exp
   30    | exp GT exp
   31    | exp LE exp
   32    | exp LT exp
   33    | varExp LPAREN explist RPAREN
   34    | LPAREN exp RPAREN
   35    | exp AND exp
   36    | exp OR exp
   37    | AMPERSAND lvalue
   38    | SIZEOF LPAREN lvalue RPAREN
   39    | LBRACK explist RBRACK
   40    | varExp

   41 varExp: lvalue
   42       | exp DOT id
   43       | exp LBRACK exp RBRACK
   44       | exp RIGHTARROW id

   45 stm: funcDec
   46    | funcCall SEMICOLON
   47    | assign SEMICOLON
   48    | declare
   49    | if
   50    | while
   51    | for
   52    | return SEMICOLON
   53    | loop
   54    | BREAK SEMICOLON
   55    | CONTINUE SEMICOLON
   56    | LBRACE stmlist RBRACE

   57 stmlist: stm
   58        | stm stmlist

   59 return: RETURN
   60       | RETURN LPAREN exp RPAREN

   61 type: id
   62     | VOID
   63     | INTTYPE
   64     | REALTYPE
   65     | BOOLEAN
   66     | CHARTYPE
   67     | SHORTTYPE
   68     | TIMES type
   69     | id LT type GT

   70 tyfield: %empty
   71        | VOID
   72        | tyfield1

   73 tyfield1: type COLON lvalue
   74         | type COLON lvalue COMMA tyfield1

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm

   76 funcCall: varExp LPAREN RPAREN
   77         | varExp LPAREN explist RPAREN

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

   79 jsExport: JSEXPORT LPAREN STRING COMMA STRING RPAREN SEMICOLON

   80 funcvarlist: funcAndVar
   81            | funcAndVar funcvarlist

   82 memlist: funcvarlist
   83        | PUBLIC COLON funcvarlist
   84        | PROTECTED COLON funcvarlist
   85        | PRIVATE COLON funcvarlist

   86 mems: memlist
   87     | memlist mems

   88 classDec: CLASS COLON id LBRACE mems RBRACE
   89         | CLASS COLON id LEFTARROW id LBRACE mems RBRACE

   90 templateDec: TYPE LT id GT COLON funcDec
   91            | TYPE LT id GT COLON classDec

   92 assign: lvalue ASSIGN exp
   93       | lvalue PLUS PLUS
   94       | lvalue MINUS MINUS
   95       | lvalue PLUS ASSIGN exp
   96       | lvalue MINUS ASSIGN exp

   97 declare: type COLON assign SEMICOLON
   98        | type COLON lvalue SEMICOLON
   99        | type COLON lvalue LBRACK RBRACK SEMICOLON
  100        | type COLON id LPAREN explist RPAREN SEMICOLON
  101        | type COLON id SEMICOLON

  102 if: IF LPAREN exp RPAREN THEN stm
  103   | IF LPAREN exp RPAREN THEN stm ELSE stm

  104 while: LPAREN exp RPAREN TO stm

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm
  106    | LPAREN exp RPAREN REPEAT stm

  107 loop: LOOP stm

  108 explist: exp COMMA explist
  109        | exp
  110        | %empty

  111 id: ID

  112 lvalue: id
  113       | lvalue DOT id
  114       | TIMES lvalue
  115       | lvalue LBRACK exp RBRACK
  116       | lvalue RIGHTARROW id


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR <cval> (258) 18
    ID <sval> (259) 111
    STRING <sval> (260) 15 78 79
    INT <ival> (261) 14
    REAL <fval> (262) 16
    COMMA (263) 74 78 79 108
    COLON (264) 73 74 75 78 83 84 85 88 89 90 91 97 98 99 100 101
    SEMICOLON (265) 46 47 52 54 55 78 79 97 98 99 100 101
    LPAREN (266) 33 34 38 60 75 76 77 78 79 100 102 103 104 105 106
    RPAREN (267) 33 34 38 60 75 76 77 78 79 100 102 103 104 105 106
    LBRACK (268) 39 43 99 115
    RBRACK (269) 39 43 99 115
    LBRACE (270) 56 88 89
    RBRACE (271) 56 88 89
    DOT (272) 42 113
    PLUS (273) 21 93 95
    MINUS (274) 22 26 94 96
    TIMES (275) 23 68 114
    DIVIDE (276) 24
    EQ (277) 27
    NEQ (278) 28
    LT (279) 32 69 90 91
    LE (280) 31
    GT (281) 30 69 90 91
    GE (282) 29
    AND (283) 35
    OR (284) 36
    ASSIGN (285) 78 92 95 96
    IF (286) 102 103
    THEN (287) 102 103
    ELSE (288) 103
    FROM (289) 105
    TO (290) 104 105
    BREAK (291) 54
    INTTYPE (292) 63
    REALTYPE (293) 64
    CONTINUE (294) 55
    RETURN (295) 59 60
    TYPE (296) 90 91
    VOID (297) 62 71
    NUL (298) 17
    TRUEE (299) 19
    FALSEE (300) 20
    BOOLEAN (301) 65
    CHARTYPE (302) 66
    MOD (303) 25
    AMPERSAND (304) 37
    SHORTTYPE (305) 67
    FUNCTION (306) 75 78
    ARROW (307) 75 78
    LOOP (308) 107
    JSLOAD (309) 78
    SIZEOF (310) 38
    CLASS (311) 88 89
    LEFTARROW (312) 89
    PRIVATE (313) 85
    PUBLIC (314) 83
    PROTECTED (315) 84
    RIGHTARROW (316) 44 116
    REPEAT (317) 106
    JSEXPORT (318) 79
    UMINUS (319)
    LOWER_THAN_ELSE (320)


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    program (67)
        on left: 1
        on right: 0
    decs <decList> (68)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 1 7 8 9 10 11
    funcAndVar <dec> (69)
        on left: 12 13
        on right: 2 10 80 81
    exp <exp> (70)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 42 43 44 60 92 95 96 102 103 104 105 106 108 109 115
    varExp <exp> (71)
        on left: 41 42 43 44
        on right: 33 40 76 77
    stm <stm> (72)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 57 58 75 102 103 104 105 106 107
    stmlist <stmList> (73)
        on left: 57 58
        on right: 56 58
    return <stm> (74)
        on left: 59 60
        on right: 52
    type <type> (75)
        on left: 61 62 63 64 65 66 67 68 69
        on right: 68 69 73 74 97 98 99 100 101
    tyfield <fieldList> (76)
        on left: 70 71 72
        on right: 75 78
    tyfield1 <fieldList> (77)
        on left: 73 74
        on right: 72 74
    funcDec <dec> (78)
        on left: 75
        on right: 13 45 90
    funcCall <stm> (79)
        on left: 76 77
        on right: 46
    jsLoad <dec> (80)
        on left: 78
        on right: 3 9
    jsExport <dec> (81)
        on left: 79
        on right: 6 11
    funcvarlist <decList> (82)
        on left: 80 81
        on right: 81 82 83 84 85
    memlist <memList> (83)
        on left: 82 83 84 85
        on right: 86 87
    mems <memList> (84)
        on left: 86 87
        on right: 87 88 89
    classDec <dec> (85)
        on left: 88 89
        on right: 4 8 91
    templateDec <dec> (86)
        on left: 90 91
        on right: 5 7
    assign <stm> (87)
        on left: 92 93 94 95 96
        on right: 47 97
    declare <dec> (88)
        on left: 97 98 99 100 101
        on right: 12 48
    if <stm> (89)
        on left: 102 103
        on right: 49
    while <stm> (90)
        on left: 104
        on right: 50
    for <stm> (91)
        on left: 105 106
        on right: 51
    loop <stm> (92)
        on left: 107
        on right: 53
    explist <expList> (93)
        on left: 108 109 110
        on right: 33 39 77 100 108
    id <sym> (94)
        on left: 111
        on right: 42 44 61 69 75 78 88 89 90 91 100 101 112 113 116
    lvalue <var> (95)
        on left: 112 113 114 115 116
        on right: 37 38 41 73 74 92 93 94 95 96 98 99 113 114 115 116


State 0

    0 $accept: . program $end

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    program      go to state 13
    decs         go to state 14
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 1

  111 id: ID .

    $default  reduce using rule 111 (id)


State 2

   68 type: TIMES . type

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    type  go to state 24
    id    go to state 23


State 3

   63 type: INTTYPE .

    $default  reduce using rule 63 (type)


State 4

   64 type: REALTYPE .

    $default  reduce using rule 64 (type)


State 5

   90 templateDec: TYPE . LT id GT COLON funcDec
   91            | TYPE . LT id GT COLON classDec

    LT  shift, and go to state 25


State 6

   62 type: VOID .

    $default  reduce using rule 62 (type)


State 7

   65 type: BOOLEAN .

    $default  reduce using rule 65 (type)


State 8

   66 type: CHARTYPE .

    $default  reduce using rule 66 (type)


State 9

   67 type: SHORTTYPE .

    $default  reduce using rule 67 (type)


State 10

   75 funcDec: FUNCTION . COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION . COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    COLON  shift, and go to state 26


State 11

   88 classDec: CLASS . COLON id LBRACE mems RBRACE
   89         | CLASS . COLON id LEFTARROW id LBRACE mems RBRACE

    COLON  shift, and go to state 27


State 12

   79 jsExport: JSEXPORT . LPAREN STRING COMMA STRING RPAREN SEMICOLON

    LPAREN  shift, and go to state 28


State 13

    0 $accept: program . $end

    $end  shift, and go to state 29


State 14

    1 program: decs .

    $default  reduce using rule 1 (program)


State 15

    2 decs: funcAndVar .
   10     | funcAndVar . decs

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    $default  reduce using rule 2 (decs)

    decs         go to state 30
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 16

   97 declare: type . COLON assign SEMICOLON
   98        | type . COLON lvalue SEMICOLON
   99        | type . COLON lvalue LBRACK RBRACK SEMICOLON
  100        | type . COLON id LPAREN explist RPAREN SEMICOLON
  101        | type . COLON id SEMICOLON

    COLON  shift, and go to state 31


State 17

   13 funcAndVar: funcDec .

    $default  reduce using rule 13 (funcAndVar)


State 18

    3 decs: jsLoad .
    9     | jsLoad . decs

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    $default  reduce using rule 3 (decs)

    decs         go to state 32
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 19

    6 decs: jsExport .
   11     | jsExport . decs

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    $default  reduce using rule 6 (decs)

    decs         go to state 33
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 20

    4 decs: classDec .
    8     | classDec . decs

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    $default  reduce using rule 4 (decs)

    decs         go to state 34
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 21

    5 decs: templateDec .
    7     | templateDec . decs

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    TYPE       shift, and go to state 5
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 10
    CLASS      shift, and go to state 11
    JSEXPORT   shift, and go to state 12

    $default  reduce using rule 5 (decs)

    decs         go to state 35
    funcAndVar   go to state 15
    type         go to state 16
    funcDec      go to state 17
    jsLoad       go to state 18
    jsExport     go to state 19
    classDec     go to state 20
    templateDec  go to state 21
    declare      go to state 22
    id           go to state 23


State 22

   12 funcAndVar: declare .

    $default  reduce using rule 12 (funcAndVar)


State 23

   61 type: id .
   69     | id . LT type GT

    LT  shift, and go to state 36

    $default  reduce using rule 61 (type)


State 24

   68 type: TIMES type .

    $default  reduce using rule 68 (type)


State 25

   90 templateDec: TYPE LT . id GT COLON funcDec
   91            | TYPE LT . id GT COLON classDec

    ID  shift, and go to state 1

    id  go to state 37


State 26

   75 funcDec: FUNCTION COLON . id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON . id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    ID  shift, and go to state 1

    id  go to state 38


State 27

   88 classDec: CLASS COLON . id LBRACE mems RBRACE
   89         | CLASS COLON . id LEFTARROW id LBRACE mems RBRACE

    ID  shift, and go to state 1

    id  go to state 39


State 28

   79 jsExport: JSEXPORT LPAREN . STRING COMMA STRING RPAREN SEMICOLON

    STRING  shift, and go to state 40


State 29

    0 $accept: program $end .

    $default  accept


State 30

   10 decs: funcAndVar decs .

    $default  reduce using rule 10 (decs)


State 31

   97 declare: type COLON . assign SEMICOLON
   98        | type COLON . lvalue SEMICOLON
   99        | type COLON . lvalue LBRACK RBRACK SEMICOLON
  100        | type COLON . id LPAREN explist RPAREN SEMICOLON
  101        | type COLON . id SEMICOLON

    ID     shift, and go to state 1
    TIMES  shift, and go to state 41

    assign  go to state 42
    id      go to state 43
    lvalue  go to state 44


State 32

    9 decs: jsLoad decs .

    $default  reduce using rule 9 (decs)


State 33

   11 decs: jsExport decs .

    $default  reduce using rule 11 (decs)


State 34

    8 decs: classDec decs .

    $default  reduce using rule 8 (decs)


State 35

    7 decs: templateDec decs .

    $default  reduce using rule 7 (decs)


State 36

   69 type: id LT . type GT

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    type  go to state 45
    id    go to state 23


State 37

   90 templateDec: TYPE LT id . GT COLON funcDec
   91            | TYPE LT id . GT COLON classDec

    GT  shift, and go to state 46


State 38

   75 funcDec: FUNCTION COLON id . LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id . LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    LPAREN  shift, and go to state 47


State 39

   88 classDec: CLASS COLON id . LBRACE mems RBRACE
   89         | CLASS COLON id . LEFTARROW id LBRACE mems RBRACE

    LBRACE     shift, and go to state 48
    LEFTARROW  shift, and go to state 49


State 40

   79 jsExport: JSEXPORT LPAREN STRING . COMMA STRING RPAREN SEMICOLON

    COMMA  shift, and go to state 50


State 41

  114 lvalue: TIMES . lvalue

    ID     shift, and go to state 1
    TIMES  shift, and go to state 41

    id      go to state 51
    lvalue  go to state 52


State 42

   97 declare: type COLON assign . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 43

  100 declare: type COLON id . LPAREN explist RPAREN SEMICOLON
  101        | type COLON id . SEMICOLON
  112 lvalue: id .

    SEMICOLON  shift, and go to state 54
    LPAREN     shift, and go to state 55

    SEMICOLON  [reduce using rule 112 (lvalue)]
    $default   reduce using rule 112 (lvalue)


State 44

   92 assign: lvalue . ASSIGN exp
   93       | lvalue . PLUS PLUS
   94       | lvalue . MINUS MINUS
   95       | lvalue . PLUS ASSIGN exp
   96       | lvalue . MINUS ASSIGN exp
   98 declare: type COLON lvalue . SEMICOLON
   99        | type COLON lvalue . LBRACK RBRACK SEMICOLON
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    SEMICOLON   shift, and go to state 56
    LBRACK      shift, and go to state 57
    DOT         shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    ASSIGN      shift, and go to state 61
    RIGHTARROW  shift, and go to state 62


State 45

   69 type: id LT type . GT

    GT  shift, and go to state 63


State 46

   90 templateDec: TYPE LT id GT . COLON funcDec
   91            | TYPE LT id GT . COLON classDec

    COLON  shift, and go to state 64


State 47

   75 funcDec: FUNCTION COLON id LPAREN . tyfield RPAREN ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN . tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 65
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    $default  reduce using rule 70 (tyfield)

    type      go to state 66
    tyfield   go to state 67
    tyfield1  go to state 68
    id        go to state 23


State 48

   88 classDec: CLASS COLON id LBRACE . mems RBRACE

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    PRIVATE    shift, and go to state 70
    PUBLIC     shift, and go to state 71
    PROTECTED  shift, and go to state 72

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 74
    memlist      go to state 75
    mems         go to state 76
    declare      go to state 22
    id           go to state 23


State 49

   89 classDec: CLASS COLON id LEFTARROW . id LBRACE mems RBRACE

    ID  shift, and go to state 1

    id  go to state 77


State 50

   79 jsExport: JSEXPORT LPAREN STRING COMMA . STRING RPAREN SEMICOLON

    STRING  shift, and go to state 78


State 51

  112 lvalue: id .

    $default  reduce using rule 112 (lvalue)


State 52

  113 lvalue: lvalue . DOT id
  114       | TIMES lvalue .
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    RIGHTARROW  shift, and go to state 62

    LBRACK      [reduce using rule 114 (lvalue)]
    DOT         [reduce using rule 114 (lvalue)]
    RIGHTARROW  [reduce using rule 114 (lvalue)]
    $default    reduce using rule 114 (lvalue)


State 53

   97 declare: type COLON assign SEMICOLON .

    $default  reduce using rule 97 (declare)


State 54

  101 declare: type COLON id SEMICOLON .

    $default  reduce using rule 101 (declare)


State 55

  100 declare: type COLON id LPAREN . explist RPAREN SEMICOLON

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    $default  reduce using rule 110 (explist)

    exp      go to state 92
    varExp   go to state 93
    explist  go to state 94
    id       go to state 51
    lvalue   go to state 95


State 56

   98 declare: type COLON lvalue SEMICOLON .

    $default  reduce using rule 98 (declare)


State 57

   99 declare: type COLON lvalue LBRACK . RBRACK SEMICOLON
  115 lvalue: lvalue LBRACK . exp RBRACK

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    RBRACK     shift, and go to state 96
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 97
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 58

  113 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 98


State 59

   93 assign: lvalue PLUS . PLUS
   95       | lvalue PLUS . ASSIGN exp

    PLUS    shift, and go to state 99
    ASSIGN  shift, and go to state 100


State 60

   94 assign: lvalue MINUS . MINUS
   96       | lvalue MINUS . ASSIGN exp

    MINUS   shift, and go to state 101
    ASSIGN  shift, and go to state 102


State 61

   92 assign: lvalue ASSIGN . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 103
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 62

  116 lvalue: lvalue RIGHTARROW . id

    ID  shift, and go to state 1

    id  go to state 104


State 63

   69 type: id LT type GT .

    $default  reduce using rule 69 (type)


State 64

   90 templateDec: TYPE LT id GT COLON . funcDec
   91            | TYPE LT id GT COLON . classDec

    FUNCTION  shift, and go to state 69
    CLASS     shift, and go to state 11

    funcDec   go to state 105
    classDec  go to state 106


State 65

   62 type: VOID .
   71 tyfield: VOID .

    RPAREN    reduce using rule 71 (tyfield)
    $default  reduce using rule 62 (type)


State 66

   73 tyfield1: type . COLON lvalue
   74         | type . COLON lvalue COMMA tyfield1

    COLON  shift, and go to state 107


State 67

   75 funcDec: FUNCTION COLON id LPAREN tyfield . RPAREN ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield . RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    RPAREN  shift, and go to state 108


State 68

   72 tyfield: tyfield1 .

    $default  reduce using rule 72 (tyfield)


State 69

   75 funcDec: FUNCTION . COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm

    COLON  shift, and go to state 109


State 70

   85 memlist: PRIVATE . COLON funcvarlist

    COLON  shift, and go to state 110


State 71

   83 memlist: PUBLIC . COLON funcvarlist

    COLON  shift, and go to state 111


State 72

   84 memlist: PROTECTED . COLON funcvarlist

    COLON  shift, and go to state 112


State 73

   80 funcvarlist: funcAndVar .
   81            | funcAndVar . funcvarlist

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69

    ID         [reduce using rule 80 (funcvarlist)]
    TIMES      [reduce using rule 80 (funcvarlist)]
    INTTYPE    [reduce using rule 80 (funcvarlist)]
    REALTYPE   [reduce using rule 80 (funcvarlist)]
    VOID       [reduce using rule 80 (funcvarlist)]
    BOOLEAN    [reduce using rule 80 (funcvarlist)]
    CHARTYPE   [reduce using rule 80 (funcvarlist)]
    SHORTTYPE  [reduce using rule 80 (funcvarlist)]
    FUNCTION   [reduce using rule 80 (funcvarlist)]
    $default   reduce using rule 80 (funcvarlist)

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 113
    declare      go to state 22
    id           go to state 23


State 74

   82 memlist: funcvarlist .

    $default  reduce using rule 82 (memlist)


State 75

   86 mems: memlist .
   87     | memlist . mems

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    PRIVATE    shift, and go to state 70
    PUBLIC     shift, and go to state 71
    PROTECTED  shift, and go to state 72

    $default  reduce using rule 86 (mems)

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 74
    memlist      go to state 75
    mems         go to state 114
    declare      go to state 22
    id           go to state 23


State 76

   88 classDec: CLASS COLON id LBRACE mems . RBRACE

    RBRACE  shift, and go to state 115


State 77

   89 classDec: CLASS COLON id LEFTARROW id . LBRACE mems RBRACE

    LBRACE  shift, and go to state 116


State 78

   79 jsExport: JSEXPORT LPAREN STRING COMMA STRING . RPAREN SEMICOLON

    RPAREN  shift, and go to state 117


State 79

  115 lvalue: lvalue LBRACK . exp RBRACK

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 97
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 80

   18 exp: CHAR .

    $default  reduce using rule 18 (exp)


State 81

   15 exp: STRING .

    $default  reduce using rule 15 (exp)


State 82

   14 exp: INT .

    $default  reduce using rule 14 (exp)


State 83

   16 exp: REAL .

    $default  reduce using rule 16 (exp)


State 84

   34 exp: LPAREN . exp RPAREN

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 118
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 85

   39 exp: LBRACK . explist RBRACK

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    $default  reduce using rule 110 (explist)

    exp      go to state 92
    varExp   go to state 93
    explist  go to state 119
    id       go to state 51
    lvalue   go to state 95


State 86

   26 exp: MINUS . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 120
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 87

   17 exp: NUL .

    $default  reduce using rule 17 (exp)


State 88

   19 exp: TRUEE .

    $default  reduce using rule 19 (exp)


State 89

   20 exp: FALSEE .

    $default  reduce using rule 20 (exp)


State 90

   37 exp: AMPERSAND . lvalue

    ID     shift, and go to state 1
    TIMES  shift, and go to state 41

    id      go to state 51
    lvalue  go to state 121


State 91

   38 exp: SIZEOF . LPAREN lvalue RPAREN

    LPAREN  shift, and go to state 122


State 92

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
  108 explist: exp . COMMA explist
  109        | exp .

    COMMA       shift, and go to state 123
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    $default  reduce using rule 109 (explist)


State 93

   33 exp: varExp . LPAREN explist RPAREN
   40    | varExp .

    LPAREN  shift, and go to state 140

    $default  reduce using rule 40 (exp)


State 94

  100 declare: type COLON id LPAREN explist . RPAREN SEMICOLON

    RPAREN  shift, and go to state 141


State 95

   41 varExp: lvalue .
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    RIGHTARROW  shift, and go to state 62

    LBRACK      [reduce using rule 41 (varExp)]
    DOT         [reduce using rule 41 (varExp)]
    RIGHTARROW  [reduce using rule 41 (varExp)]
    $default    reduce using rule 41 (varExp)


State 96

   99 declare: type COLON lvalue LBRACK RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 97

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
  115 lvalue: lvalue LBRACK exp . RBRACK

    LBRACK      shift, and go to state 124
    RBRACK      shift, and go to state 143
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 98

  113 lvalue: lvalue DOT id .

    $default  reduce using rule 113 (lvalue)


State 99

   93 assign: lvalue PLUS PLUS .

    $default  reduce using rule 93 (assign)


State 100

   95 assign: lvalue PLUS ASSIGN . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 144
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 101

   94 assign: lvalue MINUS MINUS .

    $default  reduce using rule 94 (assign)


State 102

   96 assign: lvalue MINUS ASSIGN . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 145
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 103

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
   92 assign: lvalue ASSIGN exp .

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    $default  reduce using rule 92 (assign)


State 104

  116 lvalue: lvalue RIGHTARROW id .

    $default  reduce using rule 116 (lvalue)


State 105

   90 templateDec: TYPE LT id GT COLON funcDec .

    $default  reduce using rule 90 (templateDec)


State 106

   91 templateDec: TYPE LT id GT COLON classDec .

    $default  reduce using rule 91 (templateDec)


State 107

   73 tyfield1: type COLON . lvalue
   74         | type COLON . lvalue COMMA tyfield1

    ID     shift, and go to state 1
    TIMES  shift, and go to state 41

    id      go to state 51
    lvalue  go to state 146


State 108

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN . ARROW LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN . ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    ARROW  shift, and go to state 147


State 109

   75 funcDec: FUNCTION COLON . id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm

    ID  shift, and go to state 1

    id  go to state 148


State 110

   85 memlist: PRIVATE COLON . funcvarlist

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 149
    declare      go to state 22
    id           go to state 23


State 111

   83 memlist: PUBLIC COLON . funcvarlist

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 150
    declare      go to state 22
    id           go to state 23


State 112

   84 memlist: PROTECTED COLON . funcvarlist

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 151
    declare      go to state 22
    id           go to state 23


State 113

   81 funcvarlist: funcAndVar funcvarlist .

    $default  reduce using rule 81 (funcvarlist)


State 114

   87 mems: memlist mems .

    $default  reduce using rule 87 (mems)


State 115

   88 classDec: CLASS COLON id LBRACE mems RBRACE .

    $default  reduce using rule 88 (classDec)


State 116

   89 classDec: CLASS COLON id LEFTARROW id LBRACE . mems RBRACE

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    PRIVATE    shift, and go to state 70
    PUBLIC     shift, and go to state 71
    PROTECTED  shift, and go to state 72

    funcAndVar   go to state 73
    type         go to state 16
    funcDec      go to state 17
    funcvarlist  go to state 74
    memlist      go to state 75
    mems         go to state 152
    declare      go to state 22
    id           go to state 23


State 117

   79 jsExport: JSEXPORT LPAREN STRING COMMA STRING RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 153


State 118

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   34    | LPAREN exp . RPAREN
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    RPAREN      shift, and go to state 154
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 119

   39 exp: LBRACK explist . RBRACK

    RBRACK  shift, and go to state 155


State 120

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   26    | MINUS exp .
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 26 (exp)]
    DOT         [reduce using rule 26 (exp)]
    RIGHTARROW  [reduce using rule 26 (exp)]
    $default    reduce using rule 26 (exp)


State 121

   37 exp: AMPERSAND lvalue .
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    RIGHTARROW  shift, and go to state 62

    LBRACK      [reduce using rule 37 (exp)]
    DOT         [reduce using rule 37 (exp)]
    RIGHTARROW  [reduce using rule 37 (exp)]
    $default    reduce using rule 37 (exp)


State 122

   38 exp: SIZEOF LPAREN . lvalue RPAREN

    ID     shift, and go to state 1
    TIMES  shift, and go to state 41

    id      go to state 51
    lvalue  go to state 156


State 123

  108 explist: exp COMMA . explist

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    $default  reduce using rule 110 (explist)

    exp      go to state 92
    varExp   go to state 93
    explist  go to state 157
    id       go to state 51
    lvalue   go to state 95


State 124

   43 varExp: exp LBRACK . exp RBRACK

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 158
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 125

   42 varExp: exp DOT . id

    ID  shift, and go to state 1

    id  go to state 159


State 126

   21 exp: exp PLUS . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 160
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 127

   22 exp: exp MINUS . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 161
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 128

   23 exp: exp TIMES . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 162
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 129

   24 exp: exp DIVIDE . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 163
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 130

   27 exp: exp EQ . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 164
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 131

   28 exp: exp NEQ . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 165
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 132

   32 exp: exp LT . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 166
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 133

   31 exp: exp LE . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 167
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 134

   30 exp: exp GT . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 168
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 135

   29 exp: exp GE . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 169
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 136

   35 exp: exp AND . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 170
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 137

   36 exp: exp OR . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 171
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 138

   25 exp: exp MOD . exp

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 172
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 139

   44 varExp: exp RIGHTARROW . id

    ID  shift, and go to state 1

    id  go to state 173


State 140

   33 exp: varExp LPAREN . explist RPAREN

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    $default  reduce using rule 110 (explist)

    exp      go to state 92
    varExp   go to state 93
    explist  go to state 174
    id       go to state 51
    lvalue   go to state 95


State 141

  100 declare: type COLON id LPAREN explist RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 142

   99 declare: type COLON lvalue LBRACK RBRACK SEMICOLON .

    $default  reduce using rule 99 (declare)


State 143

  115 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 115 (lvalue)


State 144

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
   95 assign: lvalue PLUS ASSIGN exp .

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    $default  reduce using rule 95 (assign)


State 145

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
   96 assign: lvalue MINUS ASSIGN exp .

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    $default  reduce using rule 96 (assign)


State 146

   73 tyfield1: type COLON lvalue .
   74         | type COLON lvalue . COMMA tyfield1
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    COMMA       shift, and go to state 176
    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    RIGHTARROW  shift, and go to state 62

    $default  reduce using rule 73 (tyfield1)


State 147

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW . LPAREN tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW . LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    LPAREN  shift, and go to state 177


State 148

   75 funcDec: FUNCTION COLON id . LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm

    LPAREN  shift, and go to state 178


State 149

   85 memlist: PRIVATE COLON funcvarlist .

    $default  reduce using rule 85 (memlist)


State 150

   83 memlist: PUBLIC COLON funcvarlist .

    $default  reduce using rule 83 (memlist)


State 151

   84 memlist: PROTECTED COLON funcvarlist .

    $default  reduce using rule 84 (memlist)


State 152

   89 classDec: CLASS COLON id LEFTARROW id LBRACE mems . RBRACE

    RBRACE  shift, and go to state 179


State 153

   79 jsExport: JSEXPORT LPAREN STRING COMMA STRING RPAREN SEMICOLON .

    $default  reduce using rule 79 (jsExport)


State 154

   34 exp: LPAREN exp RPAREN .

    $default  reduce using rule 34 (exp)


State 155

   39 exp: LBRACK explist RBRACK .

    $default  reduce using rule 39 (exp)


State 156

   38 exp: SIZEOF LPAREN lvalue . RPAREN
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    RPAREN      shift, and go to state 180
    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    RIGHTARROW  shift, and go to state 62


State 157

  108 explist: exp COMMA explist .

    $default  reduce using rule 108 (explist)


State 158

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   43       | exp LBRACK exp . RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    RBRACK      shift, and go to state 181
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 159

   42 varExp: exp DOT id .

    $default  reduce using rule 42 (varExp)


State 160

   21 exp: exp . PLUS exp
   21    | exp PLUS exp .
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 21 (exp)]
    DOT         [reduce using rule 21 (exp)]
    RIGHTARROW  [reduce using rule 21 (exp)]
    $default    reduce using rule 21 (exp)


State 161

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   22    | exp MINUS exp .
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 22 (exp)]
    DOT         [reduce using rule 22 (exp)]
    RIGHTARROW  [reduce using rule 22 (exp)]
    $default    reduce using rule 22 (exp)


State 162

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   23    | exp TIMES exp .
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 23 (exp)]
    DOT         [reduce using rule 23 (exp)]
    RIGHTARROW  [reduce using rule 23 (exp)]
    $default    reduce using rule 23 (exp)


State 163

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   24    | exp DIVIDE exp .
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 24 (exp)]
    DOT         [reduce using rule 24 (exp)]
    RIGHTARROW  [reduce using rule 24 (exp)]
    $default    reduce using rule 24 (exp)


State 164

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   27    | exp EQ exp .
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 27 (exp)]
    DOT         [reduce using rule 27 (exp)]
    RIGHTARROW  [reduce using rule 27 (exp)]
    $default    reduce using rule 27 (exp)


State 165

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   28    | exp NEQ exp .
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 28 (exp)]
    DOT         [reduce using rule 28 (exp)]
    RIGHTARROW  [reduce using rule 28 (exp)]
    $default    reduce using rule 28 (exp)


State 166

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   32    | exp LT exp .
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 32 (exp)]
    DOT         [reduce using rule 32 (exp)]
    RIGHTARROW  [reduce using rule 32 (exp)]
    $default    reduce using rule 32 (exp)


State 167

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   31    | exp LE exp .
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 31 (exp)]
    DOT         [reduce using rule 31 (exp)]
    RIGHTARROW  [reduce using rule 31 (exp)]
    $default    reduce using rule 31 (exp)


State 168

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   30    | exp GT exp .
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 30 (exp)]
    DOT         [reduce using rule 30 (exp)]
    RIGHTARROW  [reduce using rule 30 (exp)]
    $default    reduce using rule 30 (exp)


State 169

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   29    | exp GE exp .
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    RIGHTARROW  shift, and go to state 139

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    LBRACK      [reduce using rule 29 (exp)]
    DOT         [reduce using rule 29 (exp)]
    RIGHTARROW  [reduce using rule 29 (exp)]
    $default    reduce using rule 29 (exp)


State 170

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   35    | exp AND exp .
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 35 (exp)]
    DOT         [reduce using rule 35 (exp)]
    RIGHTARROW  [reduce using rule 35 (exp)]
    $default    reduce using rule 35 (exp)


State 171

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   36    | exp OR exp .
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 36 (exp)]
    DOT         [reduce using rule 36 (exp)]
    RIGHTARROW  [reduce using rule 36 (exp)]
    $default    reduce using rule 36 (exp)


State 172

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   25    | exp MOD exp .
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    RIGHTARROW  shift, and go to state 139

    LBRACK      [reduce using rule 25 (exp)]
    DOT         [reduce using rule 25 (exp)]
    RIGHTARROW  [reduce using rule 25 (exp)]
    $default    reduce using rule 25 (exp)


State 173

   44 varExp: exp RIGHTARROW id .

    $default  reduce using rule 44 (varExp)


State 174

   33 exp: varExp LPAREN explist . RPAREN

    RPAREN  shift, and go to state 182


State 175

  100 declare: type COLON id LPAREN explist RPAREN SEMICOLON .

    $default  reduce using rule 100 (declare)


State 176

   74 tyfield1: type COLON lvalue COMMA . tyfield1

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    type      go to state 66
    tyfield1  go to state 183
    id        go to state 23


State 177

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN . tyfield RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN . tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 65
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    $default  reduce using rule 70 (tyfield)

    type      go to state 66
    tyfield   go to state 184
    tyfield1  go to state 68
    id        go to state 23


State 178

   75 funcDec: FUNCTION COLON id LPAREN . tyfield RPAREN ARROW LPAREN tyfield RPAREN stm

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 65
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    $default  reduce using rule 70 (tyfield)

    type      go to state 66
    tyfield   go to state 185
    tyfield1  go to state 68
    id        go to state 23


State 179

   89 classDec: CLASS COLON id LEFTARROW id LBRACE mems RBRACE .

    $default  reduce using rule 89 (classDec)


State 180

   38 exp: SIZEOF LPAREN lvalue RPAREN .

    $default  reduce using rule 38 (exp)


State 181

   43 varExp: exp LBRACK exp RBRACK .

    $default  reduce using rule 43 (varExp)


State 182

   33 exp: varExp LPAREN explist RPAREN .

    $default  reduce using rule 33 (exp)


State 183

   74 tyfield1: type COLON lvalue COMMA tyfield1 .

    $default  reduce using rule 74 (tyfield1)


State 184

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield . RPAREN stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield . RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    RPAREN  shift, and go to state 186


State 185

   75 funcDec: FUNCTION COLON id LPAREN tyfield . RPAREN ARROW LPAREN tyfield RPAREN stm

    RPAREN  shift, and go to state 187


State 186

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN . stm
   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN . ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    ASSIGN     shift, and go to state 191
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 199
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 187

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN . ARROW LPAREN tyfield RPAREN stm

    ARROW  shift, and go to state 211


State 188

   34 exp: LPAREN . exp RPAREN
  104 while: LPAREN . exp RPAREN TO stm
  105 for: LPAREN . stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm
  106    | LPAREN . exp RPAREN REPEAT stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 212
    varExp    go to state 198
    stm       go to state 213
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 189

   56 stm: LBRACE . stmlist RBRACE

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 214
    stmlist   go to state 215
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 190

   68 type: TIMES . type
  114 lvalue: TIMES . lvalue

    ID         shift, and go to state 1
    TIMES      shift, and go to state 190
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 6
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    type    go to state 24
    id      go to state 209
    lvalue  go to state 52


State 191

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN . JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON

    JSLOAD  shift, and go to state 216


State 192

  102 if: IF . LPAREN exp RPAREN THEN stm
  103   | IF . LPAREN exp RPAREN THEN stm ELSE stm

    LPAREN  shift, and go to state 217


State 193

   54 stm: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 218


State 194

   55 stm: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 219


State 195

   59 return: RETURN .
   60       | RETURN . LPAREN exp RPAREN

    LPAREN  shift, and go to state 220

    $default  reduce using rule 59 (return)


State 196

  107 loop: LOOP . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 221
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 197

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id

    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 198

   33 exp: varExp . LPAREN explist RPAREN
   40    | varExp .
   76 funcCall: varExp . LPAREN RPAREN
   77         | varExp . LPAREN explist RPAREN

    LPAREN  shift, and go to state 222

    $default  reduce using rule 40 (exp)


State 199

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN stm .

    $default  reduce using rule 75 (funcDec)


State 200

   52 stm: return . SEMICOLON

    SEMICOLON  shift, and go to state 223


State 201

   45 stm: funcDec .

    $default  reduce using rule 45 (stm)


State 202

   46 stm: funcCall . SEMICOLON

    SEMICOLON  shift, and go to state 224


State 203

   47 stm: assign . SEMICOLON

    SEMICOLON  shift, and go to state 225


State 204

   48 stm: declare .

    $default  reduce using rule 48 (stm)


State 205

   49 stm: if .

    $default  reduce using rule 49 (stm)


State 206

   50 stm: while .

    $default  reduce using rule 50 (stm)


State 207

   51 stm: for .

    $default  reduce using rule 51 (stm)


State 208

   53 stm: loop .

    $default  reduce using rule 53 (stm)


State 209

   61 type: id .
   69     | id . LT type GT
  112 lvalue: id .

    LT  shift, and go to state 36

    COLON     reduce using rule 61 (type)
    LT        [reduce using rule 112 (lvalue)]
    $default  reduce using rule 112 (lvalue)


State 210

   41 varExp: lvalue .
   92 assign: lvalue . ASSIGN exp
   93       | lvalue . PLUS PLUS
   94       | lvalue . MINUS MINUS
   95       | lvalue . PLUS ASSIGN exp
   96       | lvalue . MINUS ASSIGN exp
  113 lvalue: lvalue . DOT id
  115       | lvalue . LBRACK exp RBRACK
  116       | lvalue . RIGHTARROW id

    LBRACK      shift, and go to state 79
    DOT         shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    ASSIGN      shift, and go to state 61
    RIGHTARROW  shift, and go to state 62

    LBRACK      [reduce using rule 41 (varExp)]
    DOT         [reduce using rule 41 (varExp)]
    PLUS        [reduce using rule 41 (varExp)]
    MINUS       [reduce using rule 41 (varExp)]
    RIGHTARROW  [reduce using rule 41 (varExp)]
    $default    reduce using rule 41 (varExp)


State 211

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW . LPAREN tyfield RPAREN stm

    LPAREN  shift, and go to state 226


State 212

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   34    | LPAREN exp . RPAREN
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
  104 while: LPAREN exp . RPAREN TO stm
  106 for: LPAREN exp . RPAREN REPEAT stm

    RPAREN      shift, and go to state 227
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 213

  105 for: LPAREN stm . RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    RPAREN  shift, and go to state 228


State 214

   57 stmlist: stm .
   58        | stm . stmlist

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    $default  reduce using rule 57 (stmlist)

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 214
    stmlist   go to state 229
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 215

   56 stm: LBRACE stmlist . RBRACE

    RBRACE  shift, and go to state 230


State 216

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD . LPAREN STRING COMMA STRING RPAREN SEMICOLON

    LPAREN  shift, and go to state 231


State 217

  102 if: IF LPAREN . exp RPAREN THEN stm
  103   | IF LPAREN . exp RPAREN THEN stm ELSE stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 232
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 218

   54 stm: BREAK SEMICOLON .

    $default  reduce using rule 54 (stm)


State 219

   55 stm: CONTINUE SEMICOLON .

    $default  reduce using rule 55 (stm)


State 220

   60 return: RETURN LPAREN . exp RPAREN

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 233
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 221

  107 loop: LOOP stm .

    $default  reduce using rule 107 (loop)


State 222

   33 exp: varExp LPAREN . explist RPAREN
   76 funcCall: varExp LPAREN . RPAREN
   77         | varExp LPAREN . explist RPAREN

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    RPAREN     shift, and go to state 234
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    RPAREN  [reduce using rule 110 (explist)]

    exp      go to state 92
    varExp   go to state 93
    explist  go to state 235
    id       go to state 51
    lvalue   go to state 95


State 223

   52 stm: return SEMICOLON .

    $default  reduce using rule 52 (stm)


State 224

   46 stm: funcCall SEMICOLON .

    $default  reduce using rule 46 (stm)


State 225

   47 stm: assign SEMICOLON .

    $default  reduce using rule 47 (stm)


State 226

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN . tyfield RPAREN stm

    ID         shift, and go to state 1
    TIMES      shift, and go to state 2
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    VOID       shift, and go to state 65
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    SHORTTYPE  shift, and go to state 9

    $default  reduce using rule 70 (tyfield)

    type      go to state 66
    tyfield   go to state 236
    tyfield1  go to state 68
    id        go to state 23


State 227

   34 exp: LPAREN exp RPAREN .
  104 while: LPAREN exp RPAREN . TO stm
  106 for: LPAREN exp RPAREN . REPEAT stm

    TO      shift, and go to state 237
    REPEAT  shift, and go to state 238

    $default  reduce using rule 34 (exp)


State 228

  105 for: LPAREN stm RPAREN . FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    FROM  shift, and go to state 239


State 229

   58 stmlist: stm stmlist .

    $default  reduce using rule 58 (stmlist)


State 230

   56 stm: LBRACE stmlist RBRACE .

    $default  reduce using rule 56 (stm)


State 231

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN . STRING COMMA STRING RPAREN SEMICOLON

    STRING  shift, and go to state 240


State 232

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
  102 if: IF LPAREN exp . RPAREN THEN stm
  103   | IF LPAREN exp . RPAREN THEN stm ELSE stm

    RPAREN      shift, and go to state 241
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 233

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
   60 return: RETURN LPAREN exp . RPAREN

    RPAREN      shift, and go to state 242
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 234

   76 funcCall: varExp LPAREN RPAREN .

    $default  reduce using rule 76 (funcCall)


State 235

   33 exp: varExp LPAREN explist . RPAREN
   77 funcCall: varExp LPAREN explist . RPAREN

    RPAREN  shift, and go to state 243


State 236

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield . RPAREN stm

    RPAREN  shift, and go to state 244


State 237

  104 while: LPAREN exp RPAREN TO . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 245
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 238

  106 for: LPAREN exp RPAREN REPEAT . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 246
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 239

  105 for: LPAREN stm RPAREN FROM . LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    LPAREN  shift, and go to state 247


State 240

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING . COMMA STRING RPAREN SEMICOLON

    COMMA  shift, and go to state 248


State 241

  102 if: IF LPAREN exp RPAREN . THEN stm
  103   | IF LPAREN exp RPAREN . THEN stm ELSE stm

    THEN  shift, and go to state 249


State 242

   60 return: RETURN LPAREN exp RPAREN .

    $default  reduce using rule 60 (return)


State 243

   33 exp: varExp LPAREN explist RPAREN .
   77 funcCall: varExp LPAREN explist RPAREN .

    SEMICOLON  reduce using rule 77 (funcCall)
    $default   reduce using rule 33 (exp)


State 244

   75 funcDec: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 199
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 245

  104 while: LPAREN exp RPAREN TO stm .

    $default  reduce using rule 104 (while)


State 246

  106 for: LPAREN exp RPAREN REPEAT stm .

    $default  reduce using rule 106 (for)


State 247

  105 for: LPAREN stm RPAREN FROM LPAREN . exp RPAREN TO LPAREN stm RPAREN stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 84
    LBRACK     shift, and go to state 85
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 41
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    AMPERSAND  shift, and go to state 90
    SIZEOF     shift, and go to state 91

    exp     go to state 250
    varExp  go to state 93
    id      go to state 51
    lvalue  go to state 95


State 248

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA . STRING RPAREN SEMICOLON

    STRING  shift, and go to state 251


State 249

  102 if: IF LPAREN exp RPAREN THEN . stm
  103   | IF LPAREN exp RPAREN THEN . stm ELSE stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 252
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 250

   21 exp: exp . PLUS exp
   22    | exp . MINUS exp
   23    | exp . TIMES exp
   24    | exp . DIVIDE exp
   25    | exp . MOD exp
   27    | exp . EQ exp
   28    | exp . NEQ exp
   29    | exp . GE exp
   30    | exp . GT exp
   31    | exp . LE exp
   32    | exp . LT exp
   35    | exp . AND exp
   36    | exp . OR exp
   42 varExp: exp . DOT id
   43       | exp . LBRACK exp RBRACK
   44       | exp . RIGHTARROW id
  105 for: LPAREN stm RPAREN FROM LPAREN exp . RPAREN TO LPAREN stm RPAREN stm

    RPAREN      shift, and go to state 253
    LBRACK      shift, and go to state 124
    DOT         shift, and go to state 125
    PLUS        shift, and go to state 126
    MINUS       shift, and go to state 127
    TIMES       shift, and go to state 128
    DIVIDE      shift, and go to state 129
    EQ          shift, and go to state 130
    NEQ         shift, and go to state 131
    LT          shift, and go to state 132
    LE          shift, and go to state 133
    GT          shift, and go to state 134
    GE          shift, and go to state 135
    AND         shift, and go to state 136
    OR          shift, and go to state 137
    MOD         shift, and go to state 138
    RIGHTARROW  shift, and go to state 139


State 251

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING . RPAREN SEMICOLON

    RPAREN  shift, and go to state 254


State 252

  102 if: IF LPAREN exp RPAREN THEN stm .
  103   | IF LPAREN exp RPAREN THEN stm . ELSE stm

    ELSE  shift, and go to state 255

    $default  reduce using rule 102 (if)


State 253

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN . TO LPAREN stm RPAREN stm

    TO  shift, and go to state 256


State 254

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 257


State 255

  103 if: IF LPAREN exp RPAREN THEN stm ELSE . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 258
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 256

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO . LPAREN stm RPAREN stm

    LPAREN  shift, and go to state 259


State 257

   78 jsLoad: FUNCTION COLON id LPAREN tyfield RPAREN ARROW LPAREN tyfield RPAREN ASSIGN JSLOAD LPAREN STRING COMMA STRING RPAREN SEMICOLON .

    $default  reduce using rule 78 (jsLoad)


State 258

  103 if: IF LPAREN exp RPAREN THEN stm ELSE stm .

    $default  reduce using rule 103 (if)


State 259

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN . stm RPAREN stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 260
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 260

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm . RPAREN stm

    RPAREN  shift, and go to state 261


State 261

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN . stm

    CHAR       shift, and go to state 80
    ID         shift, and go to state 1
    STRING     shift, and go to state 81
    INT        shift, and go to state 82
    REAL       shift, and go to state 83
    LPAREN     shift, and go to state 188
    LBRACK     shift, and go to state 85
    LBRACE     shift, and go to state 189
    MINUS      shift, and go to state 86
    TIMES      shift, and go to state 190
    IF         shift, and go to state 192
    BREAK      shift, and go to state 193
    INTTYPE    shift, and go to state 3
    REALTYPE   shift, and go to state 4
    CONTINUE   shift, and go to state 194
    RETURN     shift, and go to state 195
    VOID       shift, and go to state 6
    NUL        shift, and go to state 87
    TRUEE      shift, and go to state 88
    FALSEE     shift, and go to state 89
    BOOLEAN    shift, and go to state 7
    CHARTYPE   shift, and go to state 8
    AMPERSAND  shift, and go to state 90
    SHORTTYPE  shift, and go to state 9
    FUNCTION   shift, and go to state 69
    LOOP       shift, and go to state 196
    SIZEOF     shift, and go to state 91

    exp       go to state 197
    varExp    go to state 198
    stm       go to state 262
    return    go to state 200
    type      go to state 16
    funcDec   go to state 201
    funcCall  go to state 202
    assign    go to state 203
    declare   go to state 204
    if        go to state 205
    while     go to state 206
    for       go to state 207
    loop      go to state 208
    id        go to state 209
    lvalue    go to state 210


State 262

  105 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm .

    $default  reduce using rule 105 (for)
